// Code generated by entc, DO NOT EDIT.

package user

import (
	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgePets holds the string denoting the pets edge name in mutations.
	EdgePets = "pets"
	// EdgeCloud holds the string denoting the cloud edge name in mutations.
	EdgeCloud = "cloud"
	// Table holds the table name of the user in the database.
	Table = "users"
	// PetsTable is the table that holds the pets relation/edge.
	PetsTable = "dogs"
	// PetsInverseTable is the table name for the Dog entity.
	// It exists in this package in order to avoid circular dependency with the "dog" package.
	PetsInverseTable = "dogs"
	// PetsColumn is the table column denoting the pets relation/edge.
	PetsColumn = "user_pets"
	// CloudTable is the table that holds the cloud relation/edge.
	CloudTable = "users"
	// CloudInverseTable is the table name for the Cloud entity.
	// It exists in this package in order to avoid circular dependency with the "cloud" package.
	CloudInverseTable = "clouds"
	// CloudColumn is the table column denoting the cloud relation/edge.
	CloudColumn = "user_cloud"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "users"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_cloud",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/yonidavidson/ent-side-effect-hooks-example/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
