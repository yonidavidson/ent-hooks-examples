// Code generated by entc, DO NOT EDIT.

package user

import (
	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPhoneNumber holds the string denoting the phone_number field in the database.
	FieldPhoneNumber = "phone_number"
	// FieldLastDigits holds the string denoting the last_digits field in the database.
	FieldLastDigits = "last_digits"
	// EdgePets holds the string denoting the pets edge name in mutations.
	EdgePets = "pets"
	// EdgeCache holds the string denoting the cache edge name in mutations.
	EdgeCache = "cache"
	// Table holds the table name of the user in the database.
	Table = "users"
	// PetsTable is the table that holds the pets relation/edge.
	PetsTable = "dogs"
	// PetsInverseTable is the table name for the Dog entity.
	// It exists in this package in order to avoid circular dependency with the "dog" package.
	PetsInverseTable = "dogs"
	// PetsColumn is the table column denoting the pets relation/edge.
	PetsColumn = "owner_id"
	// CacheTable is the table that holds the cache relation/edge.
	CacheTable = "users"
	// CacheInverseTable is the table name for the Cache entity.
	// It exists in this package in order to avoid circular dependency with the "cache" package.
	CacheInverseTable = "caches"
	// CacheColumn is the table column denoting the cache relation/edge.
	CacheColumn = "user_cache"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPhoneNumber,
	FieldLastDigits,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "users"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_cache",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/yonidavidson/ent-hooks-examples/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	PhoneNumberValidator func(string) error
	// LastDigitsValidator is a validator for the "last_digits" field. It is called by the builders before save.
	LastDigitsValidator func(string) error
)
